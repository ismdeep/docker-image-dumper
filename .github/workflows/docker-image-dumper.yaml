name: Docker Image Dumper

on:
  workflow_dispatch:
    inputs:
      docker_image:
        description: "Docker image (e.g., nginx:latest)"
        required: true
        default: "nginx:latest"
      platform:
        description: "Target platform (e.g., linux/amd64)"
        required: true
        default: "linux/amd64"

jobs:
  dump:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Set environment variables
        id: vars
        run: |
          IMAGE_NAME="${{ github.event.inputs.docker_image }}"
          PLATFORM="${{ github.event.inputs.platform }}"
          DATE_TAG=$(date +'%Y%m%d')
          SAFE_IMAGE_NAME=$(echo "$IMAGE_NAME" | sed 's/[/:]/_/g')
          SAFE_PLATFORM_NAME=$(echo "$PLATFORM" | sed 's/[/:]/_/g')
          FILE_NAME="${SAFE_IMAGE_NAME}_${SAFE_PLATFORM_NAME}_${DATE_TAG}"
          echo "FILE_NAME=$FILE_NAME" >> $GITHUB_OUTPUT
          echo "IMAGE_NAME=$IMAGE_NAME" >> $GITHUB_OUTPUT
          echo "PLATFORM=$PLATFORM" >> $GITHUB_OUTPUT

      - name: Install sshpass
        run: |
          sudo apt-get update && sudo apt-get install -y sshpass

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Pull image for platform
        run: |
          docker buildx create --use
          docker pull --platform "${{ steps.vars.outputs.PLATFORM }}" "${{ steps.vars.outputs.IMAGE_NAME }}"

      - name: Save Docker image to tar.xz
        run: |
          docker image save -o "${{ steps.vars.outputs.FILE_NAME }}.tar" "${{ steps.vars.outputs.IMAGE_NAME }}"
          xz -v -T 0 "${{ steps.vars.outputs.FILE_NAME }}.tar"

      - name: Upload to server
        run: |
          set -e
          sshpass -p "${{ secrets.SERVER_PASSWORD }}" scp -P ${{ secrets.SERVER_PORT }} -o StrictHostKeyChecking=no "${{ steps.vars.outputs.FILE_NAME }}.tar.xz" ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_ADDR }}:${{ secrets.SERVER_PATH }}/
          echo "$(date '+%Y-%m-%d %H:%M:%S %z') [ OK ] ${{ vars.EXPOSE_URL }}/${{ steps.vars.outputs.FILE_NAME }}.tar.xz"
